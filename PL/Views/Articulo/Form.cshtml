@model ML.Articulo
@{
    ViewData["Title"] = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Registro de Artículo</h2>
<div class="container">
    @if (Model.IdArticulo == 0)
    {
        <h3>Nuevo Articulo</h3>
        <p>Inserta los datos del nuevo Articulo</p>
    }
    else
    {
        <h3>ID del Articulo:  @Html.DisplayFor(model => model.IdArticulo)</h3>
    }
</div>

<div class="container">
    @using (Html.BeginForm("Form", "Articulo", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-class" }))
    {
        @Html.HiddenFor(model => model.IdArticulo)
        @Html.HiddenFor(model => model.Imagen)
        
        

        <div class="row justify-content-center">
            <div id="imageContainer" class="col-md-3 d-flex flex-column align-items-center">
                @if (Model.Imagen == null)
                {
                    <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-person-circle" viewBox="0 0 16 16">
                        <path d="M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0" />
                        <path fill-rule="evenodd" d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8m8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1" />
                    </svg>
                    <p class="text-center">El Articulo no cuenta con una Foto</p>
                }
                else
                {
                    <img id="imgAnterior" class="img-fluid" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Imagen)" alt="Imagen del artículo 📷" style="max-width: 50%; height: auto; margin-top: 10px; padding:10px" />
                }
            </div>

            <div class="col-md-3 d-flex flex-column align-items-center">
                <div class="mb-3">
                    @Html.LabelFor(model => model.Imagen, "Foto", new { @class = "" })
                    <input class="form-control form-control-sm foto" type="file" onchange="validarFoto(); visualizadorImagen(this);" id="imagen" name="imagen" />
                </div>
            </div>
        </div>

        <div class="row justify-content-center">
            <div class="col-md-3">
                <div class="form-floating">
                    @Html.TextBoxFor(model => model.Nombre, new { @placeholder = "", @class = "form-control" })
                    @Html.LabelFor(model => model.Nombre, "Nombre del Artículo", new { @class = "" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-floating   ">
                    @Html.TextAreaFor(model => model.Descripcion, new { @placeholder = "", @class = "form-control", @rows = "3" })
                    @Html.LabelFor(model => model.Descripcion, "Descripción", new { @class = "" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-floating mb-3">
                    @Html.DropDownListFor(model => model.Marca.IdMarca,
                new SelectList(Model.Marca.Marcas, "IdMarca", "Nombre"),
                "Seleccione una marca",
                new { @class = "form-control" })
                    @Html.LabelFor(model => model.Marca.Nombre, "Marca")
                </div>
            </div>
        </div>

        <div>
            <hr />
        </div>
        <div class="row text-center">
            <div class="col-md-3 offset-md-3">
                <button type="submit" class="btn btn-success btn-block">Guardar</button>
            </div>
            <div class="col-md-3">
                <a href="@Url.Action("GetAll", "Articulo", new { })" class = "btn btn-danger btn-block">Cancelar</a>
            </div>
        </div>
    }
</div>

<script type="text/javascript">
    function validarFoto() {
        var allowedExtension = ["jpeg", "jpg", "png"];
        var fileExtension = document.getElementById('imagen').value.split('.').pop().toLowerCase();
        var isValidFile = allowedExtension.includes(fileExtension);

        if (!isValidFile) {
            alert('Las extensiones permitidas son: ' + allowedExtension.join(', .'));
            document.getElementById('imagen').value = "";
        }
        return isValidFile;
    }

    function visualizadorImagen(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                var imageContainer = document.getElementById('imageContainer');
                imageContainer.innerHTML = ''; // Limpiar el contenido existente

                var img = document.createElement('img');
                img.src = e.target.result;
                img.className = 'img-fluid';
                img.style.maxWidth = '50%';
                img.style.height = 'auto';
                img.style.marginTop = '10px';
                img.style.padding = '10px';

                imageContainer.appendChild(img);
            }
            reader.readAsDataURL(input.files[0]);
        }
    }
</script>

<style>
    .form-class {
        background-color: #f5f5f5;
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 5px;
    }

        .form-class input {
            margin-bottom: 10px;
        }

    .form-container {
        padding: 20px;
        background-color: #f9f9f9;
        border: 1px solid #ddd;
        border-radius: 5px;
        margin-bottom: 20px;
    }
</style>
